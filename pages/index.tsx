import type { NextPage,GetServerSideProps } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {useState} from 'react';
interface SerchCatImage{
  id:string;
  url:string;
  width:number;
  height:number;
}

interface IndexPageProps{
  initialCatImageUrl:string;
}

const fetchcatimg=async():Promise<SerchCatImage>=>{
  const res=await fetch(" https://api.thecatapi.com/v1/images/search")
  const result=await res.json()
  console.log(result)
  return result[0]
}

const Home: NextPage<IndexPageProps> = ({initialCatImageUrl}) => {
  const [catImgUrl,setCatimgurl]=useState(initialCatImageUrl);
  const [isloading,setIsloding]=useState(false)
  
  const handleclick=async()=>{
    setIsloding(true)
    const catImg=await fetchcatimg();
    setCatimgurl(catImg.url)
    setIsloding(false)
  }
  return (
    <div
     style={{
      display:"flex",
      flexDirection:"column",
      alignItems:"center",
      justifyContent:"center",
      height:"100vh"
     }}
    >
      <Head>
        <title>勉強用で作った猫ちゃん検索アプリ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>猫画像アプリ</h1>
      {isloading? (
        <p>ロード中</p>
        ):(
          <img 
            src={catImgUrl}
            width={500}
            height="auto"
          />
        )}
      <button style={{marginTop:18}} onClick={()=>handleclick()}>今日の猫さん</button>
    </div>
  )
}
//SSR(サーバーサイドレンダリング)
export const getServerSideProps:GetServerSideProps<
  IndexPageProps
>=async()=>{
  const catImg=await fetchcatimg()
  
  return{
    props:{
      initialCatImageUrl:catImg.url
    }
  }
}


export default Home
